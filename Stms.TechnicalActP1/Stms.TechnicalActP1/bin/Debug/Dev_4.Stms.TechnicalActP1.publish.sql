/*
Deployment script for AX_Test_Interface

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DB_SOURCE_NAME "AX_Test"
:setvar DB_TARGET_NAME "AX_Test_Interface"
:setvar PROJECT_SCHEMA_NAME "dev"
:setvar UTC_OFFSET "3"
:setvar DatabaseName "AX_Test_Interface"
:setvar DefaultFilePrefix "AX_Test_Interface"
:setvar DefaultDataPath "E:\MSSQL\Data\"
:setvar DefaultLogPath "E:\MSSQL\Data\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = N'$(PROJECT_SCHEMA_NAME)')
	EXEC ('CREATE SCHEMA $(PROJECT_SCHEMA_NAME)')
GO

DROP VIEW IF EXISTS [$(PROJECT_SCHEMA_NAME)].V_PBI_10988_TECHNICAL_ACT_P11
GO

CREATE VIEW [$(PROJECT_SCHEMA_NAME)].[V_PBI_10988_TECHNICAL_ACT_P11]
AS
	SELECT 1 AS col
GO

GO

-- =============================================
-- Author: Teploukhov ES 
-- Create date: 20.08.2021
-- Pbi: http://eka-devops/devops/Sinara/DAX/_workitems/edit/10988
-- Description: Сводный технический акт П-1 с пробегами
-- 23.11.2021 доработка http://eka-devops/devops/Sinara/DAX/_workitems/edit/11959
-- =============================================
ALTER VIEW [$(PROJECT_SCHEMA_NAME)].V_PBI_10988_TECHNICAL_ACT_P11
AS

WITH Customer_CTE AS 
( -- Определяем заказчика (для шапки отчета)
	SELECT DISTINCT
		m.NAME AS Customer
		, rd1.ORGANIZATIONID AS OrgID
	 FROM [$(DB_SOURCE_NAME)]..SSMMANAGEMENTS AS m
	 INNER JOIN [$(DB_SOURCE_NAME)]..SSMREGISTRATIONDEPOT AS rd1
	 ON m.MANAGEMENTID = rd1.MANAGEMENTID
), 
Executor_CTE as
( -- Определяем исполнителя (для шапки отчета)
	SELECT 
		hrmo.DESCRIPTION + ' ' + hrmo_par.DESCRIPTION AS Executor
		, hrmo_par.HRMORGANIZATIONID AS OrgID
	 FROM [$(DB_SOURCE_NAME)]..RPAYHRMORGANIZATION AS hrmo
	 INNER JOIN [$(DB_SOURCE_NAME)]..RPAYHRMORGANIZATION AS hrmo_par -- Находим родителя
		 ON hrmo.HRMORGANIZATIONID = hrmo_par.PARENTORGANIZATIONID
),
ServiceKind_CTE AS 
( -- отбираем ServiceKindID по полю SyntheticKindRecID при условии, что Synthetic = 1 и Main = 1 (синтетический вид СО)
	SELECT
		aj1.SERVICEKINDID AS aj_servicekindid
		, sk2.SERVICEKINDID AS sk_servicekindid
	 FROM [$(DB_SOURCE_NAME)]..SSMARRIVALJOURNAL AS aj1
	 INNER JOIN [$(DB_SOURCE_NAME)]..SSMSERVICEKINDS AS sk1
		 ON aj1.SERVICEKINDID = sk1.SERVICEKINDID and sk1.SYNTHETIC = 1
	 INNER JOIN [$(DB_SOURCE_NAME)]..SSMSYNTHETICSERVICEKINDS AS ssk1 -- Синтетические виды СО
		 ON sk1.RECID = ssk1.SERVICEKINDRECID and ssk1.MAIN = 1
	 INNER JOIN [$(DB_SOURCE_NAME)]..SSMSERVICEKINDS AS sk2
		 ON sk2.RECID = ssk1.SYNTHETICKINDRECID
)
SELECT 
	DISTINCT
	aj.OBJECTCLASSID AS [Серия локомотива]
	, o.FACTORYID AS [Номер Локомотива]
	, 1 AS [Кол-во секций]
	, CONVERT (NVARCHAR, DATEADD(hh, CAST('$(UTC_OFFSET)' AS int), aj.REGISTRATIONSODATE),104) AS [Дата постановки локомотива в ремонт]
	, CONVERT(TIME(0), DATEADD(hh, CAST('$(UTC_OFFSET)' AS int), aj.REGISTRATIONSODATE)) AS [Время постановки локомотива в ремонт]
	, aj.SUPPLEMENTNUM AS [№ Акта приемки Локомотива в ремонт]
	, CASE
		WHEN sk.SYNTHETIC = 0 THEN aj.SERVICEKINDID
		WHEN sk.SYNTHETIC = 1 THEN ServiceKind_CTE.sk_servicekindid
		ELSE null
	END AS [Вид ремонта]
	, IIF(YEAR(aj.REPAIRSOENDDATE) = 1900
		, NULL, CONVERT (NVARCHAR, DATEADD(hh, CAST('$(UTC_OFFSET)' AS int), aj.REPAIRSOENDDATE),104)) AS [Дата выхода локомотива из ремонта]
	, IIF(YEAR(aj.REPAIRSOENDDATE) = 1900
		, NULL, CONVERT(TIME(0), DATEADD(hh, CAST('$(UTC_OFFSET)' AS int), aj.REPAIRSOENDDATE))) AS [Время выхода локомотива из ремонта]
	, aj.SUPPLEMENTNUM AS [№ Акта приемки Локомотива из ремонта]
	, IIF(YEAR(aj.REPAIRSOENDDATE) = 1900
		, NULL, CAST(DATEDIFF(ss, aj.REGISTRATIONSODATE ,aj.REPAIRSOENDDATE )
			/ 3600.0 AS DECIMAL(10,2))) AS [Кол-во нахождения в ремонте одной секции]
	, IIF(YEAR(aj.REPAIRSOENDDATE) = 1900
		, NULL, CAST(DATEDIFF(ss, aj.REGISTRATIONSODATE ,aj.REPAIRSOENDDATE )
			/ 3600.0 AS DECIMAL(10,2))) AS [Кол-во нахождения всех секций в ремонте(суммарно)]
	, rd.NAME AS [Депо приписки(Примечание)]
	, aj.RPAYHRMORGANIZATIONID AS [Фильтр подразделения]
	, IIF(YEAR(aj.REPAIRSOENDDATE) = 1900,
		NULL, DATEADD(hh, CAST('$(UTC_OFFSET)' AS int), aj.REPAIRSOENDDATE)) AS [Фильтр даты]
	, Customer_CTE.Customer AS [Заказчик]
	, Executor_CTE.Executor AS [Исполнитель]
	, DATEADD(hh,CAST('$(UTC_OFFSET)' AS int), aj.REGISTRATIONSODATE) AS [Сортировка даты и времени]
	FROM [$(DB_SOURCE_NAME)]..SSMARRIVALJOURNALLINE AS ajl -- Строки журнала прибытия
	INNER JOIN [$(DB_SOURCE_NAME)]..SSMARRIVALJOURNAL AS aj -- Журнал прибытия
		ON (ajl.ARRIVALJOURNALID = aj.ARRIVALJOURNALID) and (aj.STATUS <> 3) -- статус не равен "аннулирован"
	LEFT JOIN [$(DB_SOURCE_NAME)]..SSMOBJECTS AS o -- Объекты обслуживания
		ON ajl.OBJECTID = o.OBJECTID
	LEFT JOIN [$(DB_SOURCE_NAME)]..SSMSERVICEKINDS AS sk -- Виды обслуживания
		ON aj.SERVICEKINDID = sk.SERVICEKINDID
	LEFT JOIN ServiceKind_CTE -- Синтетические виды СО
		ON aj.SERVICEKINDID = ServiceKind_CTE.aj_servicekindid
	LEFT JOIN [$(DB_SOURCE_NAME)]..SSMREGISTRATIONDEPOT AS rd -- Депо приписки
		ON ajl.REGISTRATIONDEPOTID = rd.REGISTRATIONDEPOTID
	LEFT JOIN Customer_CTE -- Заказчик
		ON aj.RPAYHRMORGANIZATIONID = Customer_CTE.OrgID
	LEFT JOIN Executor_CTE -- Исполнитель
		ON aj.RPAYHRMORGANIZATIONID = Executor_CTE.OrgID
GO

GO
PRINT N'Update complete.';


GO
